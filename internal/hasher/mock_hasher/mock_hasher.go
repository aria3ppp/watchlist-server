// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aria3ppp/watchlist-server/internal/hasher (interfaces: Interface)

// Package mock_hasher is a generated GoMock package.
package mock_hasher

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// CompareHash mocks base method.
func (m *MockInterface) CompareHash(arg0, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompareHash", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CompareHash indicates an expected call of CompareHash.
func (mr *MockInterfaceMockRecorder) CompareHash(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompareHash", reflect.TypeOf((*MockInterface)(nil).CompareHash), arg0, arg1)
}

// GenerateHash mocks base method.
func (m *MockInterface) GenerateHash(arg0 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateHash", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateHash indicates an expected call of GenerateHash.
func (mr *MockInterfaceMockRecorder) GenerateHash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateHash", reflect.TypeOf((*MockInterface)(nil).GenerateHash), arg0)
}
