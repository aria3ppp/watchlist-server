# This workflow will test a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Tests

on: [push, pull_request]

jobs:

  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
        
    - name: Download dependencies
      run: |
        go mod download
        go mod verify
    
    - name: Set envs
      run: cp .env.example .env
        
    - name: Start services
      run: make services-up

    - name: Test
      run: make test-all

  lint:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
  
  upload-coverage:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Upload test coverage to Coveralls.io
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: coverage-all.out

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [test]
    env:
      IMAGE_SERVER: ${{ secrets.DOCKERHUB_USERNAME }}/watchlist-server
      IMAGE_LOGSTASH: ${{ secrets.DOCKERHUB_USERNAME }}/watchlist-logstash-pipelines
    steps:
      - uses: actions/checkout@v3

      - name: Login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build images
        run: |
          docker build . --build-arg=GO_VERSION=1.19 --build-arg=MIGRATE_VERSION=4.15.2 --tag ${{ env.IMAGE_SERVER }}
          docker build logstash --build-arg=LOGSTASH_VERSION=8.4.0 --build-arg=JDBC_POSTGRES_DRIVER_VERSION=42.4.2 --tag ${{ env.IMAGE_LOGSTASH }}
      
      - name: Deploy to docker hub
        run: |
          docker push ${{ env.IMAGE_SERVER }}
          docker push ${{ env.IMAGE_LOGSTASH }}
